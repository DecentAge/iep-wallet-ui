variables:
  DEPLOY_ENVIRONMENT:
    value: "staging"  # Deploy to staging by default
    description: "The deployment target. Change this variable to 'canary' or 'production' if needed."

stages:
  - build
  - publish
  - deploy

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      tag=""
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE$tag" .
    - docker save "$CI_REGISTRY_IMAGE$tag" > iep-wallet-ui.tar
    - echo "DOCKER_IMAGE_TAG=$tag" >> build.env  
  artifacts:
    paths:
      - iep-wallet-ui.tar
    reports:
      dotenv: build.env
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
#  environment:
#    name: testnet2-staging
gitlab-publish:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY 
  script:
    - echo "Wuff $tag"
    - docker load -i iep-wallet-ui.tar
    - docker push "$CI_REGISTRY_IMAGE${DOCKER_IMAGE_TAG}"
  dependencies:
    - docker-build
dockerhub-publish:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY 
  script:
    - echo "Miau ${DOCKER_IMAGE_TAG}"
    - docker push "$CI_REGISTRY_IMAGE${DOCKER_IMAGE_TAG}"
  dependencies:
    - docker-build
deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f my-app || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 80:80 --name my-app $TAG_COMMIT"
  environment:
    name: testnet2-staging
    url: http://168.119.228.238/wallet
  only:
    - develop
  when: manual